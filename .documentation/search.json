{"Structs/UnwrapStore.html#/s:5RedUx11UnwrapStoreV_16unwrappedContentACyxq_q0_qd__SgGAA0D0CyxSgq_q0_G_qd__AHyxq_q0_GctcAERs1_7SwiftUI4ViewRd__lufc":{"name":"init(_:unwrappedContent:)","abstract":"<p>Undocumented</p>","parent_name":"UnwrapStore"},"Structs/UnwrapStore.html#/s:7SwiftUI4ViewP4body4BodyQzvp":{"name":"body","parent_name":"UnwrapStore"},"Structs/Reducer.html#/s:5RedUx7ReducerV5emptyACyxq_q0_GvpZ":{"name":"empty","abstract":"<p>An empty reducer. Useful for SwiftUI&rsquo;s previews.</p>","parent_name":"Reducer"},"Structs/Reducer.html#/s:5RedUx7ReducerV6Reducea":{"name":"Reduce","abstract":"<p>Undocumented</p>","parent_name":"Reducer"},"Structs/Reducer.html#/s:5RedUx7ReducerVyACyxq_q0_Gyxz_q_q0_tccfc":{"name":"init(_:)","abstract":"<p>Construct a Reducer.</p>","parent_name":"Reducer"},"Structs/Reducer.html#/s:5RedUx7ReducerV8optionalACyxSgq_q0_Gvp":{"name":"optional","abstract":"<p>Transform the current reducer into one that accepts an optional state.</p>","parent_name":"Reducer"},"Structs/Reducer.html#/s:5RedUx7ReducerV4pull5state5event8appEvent11environmentACyqd__qd_0_qd_1_Gs15WritableKeyPathCyqd__xG_q_Sgqd_0_cqd_0_q_cq0_qd_1_ctr1_lF":{"name":"pull(state:event:appEvent:environment:)","abstract":"<p>Transforms or &ldquo;Pulls&rdquo; a local reducer into a global reducer.</p>","parent_name":"Reducer"},"Structs/Reducer.html#/s:5RedUx7ReducerV2lgoiyACyxq_q0_GAE_AEtFZ":{"name":"<>(_:_:)","abstract":"<p>Combines two reducers of the same <code>State</code>, <code>Event</code> and <code>Environment</code> into one.</p>","parent_name":"Reducer"},"Structs/AnyMiddleware.html#/s:5RedUx13AnyMiddlewareV9OnExecutea":{"name":"OnExecute","abstract":"<p>The closure that is called when the <code>execute</code> function is called.</p>","parent_name":"AnyMiddleware"},"Structs/AnyMiddleware.html#/s:5RedUx13AnyMiddlewareV12outputStream10Asynchrone0C17AsyncSequenceableVyq_Gvp":{"name":"outputStream","abstract":"<p>The output stream is used my the middleware to emit events","parent_name":"AnyMiddleware"},"Structs/AnyMiddleware.html#/s:5RedUx13AnyMiddlewareV12outputStream9onExecuteACyxq_q0_G10Asynchrone0C17AsyncSequenceableVyq_G_yx_q0_yXEtYactcfc":{"name":"init(outputStream:onExecute:)","abstract":"<p>Create a new AnyMiddleware instance.</p>","parent_name":"AnyMiddleware"},"Structs/AnyMiddleware.html#/s:5RedUx13AnyMiddlewareVyACyxq_q0_Gqd__c10InputEventQyd__Rsz06OutputF0Qyd__Rs_5StateQyd__Rs0_AA14MiddlewareableRd__lufc":{"name":"init(_:)","abstract":"<p>Create a new AnyMiddleware instance that type erases the provided middleware.</p>","parent_name":"AnyMiddleware"},"Structs/AnyMiddleware.html#/s:5RedUx13AnyMiddlewareV7execute5event5stateyx_q0_yXEtYaF":{"name":"execute(event:state:)","abstract":"<p>The execute function is called by the store when it receives an event.</p>","parent_name":"AnyMiddleware"},"Structs/AnyMiddleware.html":{"name":"AnyMiddleware","abstract":"<p>A middleware that performs type erasure by wrapping another middleware.</p>"},"Structs/Reducer.html":{"name":"Reducer","abstract":"<p>A reducer is responsible for taking an event and deciding how the state should be changed and"},"Structs/UnwrapStore.html":{"name":"UnwrapStore","abstract":"<p>Undocumented</p>"},"Protocols/RedUxable.html#/s:5RedUx0A6UxableP10LocalStateQa":{"name":"LocalState","abstract":"<p>The local state type.</p>","parent_name":"RedUxable"},"Protocols/RedUxable.html#/s:5RedUx0A6UxableP10LocalEventQa":{"name":"LocalEvent","abstract":"<p>The local event type.</p>","parent_name":"RedUxable"},"Protocols/RedUxable.html#/s:5RedUx0A6UxableP16LocalEnvironmentQa":{"name":"LocalEnvironment","abstract":"<p>The local state type.</p>","parent_name":"RedUxable"},"Protocols/RedUxable.html#/s:5RedUx0A6UxableP10LocalStorea":{"name":"LocalStore","abstract":"<p>The local store.</p>","parent_name":"RedUxable"},"Protocols/RedUxable.html#/s:5RedUx0A6UxableP14LocalViewModela":{"name":"LocalViewModel","abstract":"<p>The local view model</p>","parent_name":"RedUxable"},"Protocols/RedUxable.html#/s:5RedUx0A6UxableP4make5storexAA5StoreCy10LocalStateQz0G5EventQz0G11EnvironmentQzG_tFZ":{"name":"make(store:)","abstract":"<p>Create a &ldquo;live&rdquo; RedUxable view with a store and view model.</p>","parent_name":"RedUxable"},"Protocols/RedUxable.html#/s:5RedUx0A6UxableP4mock5state11environmentx10LocalStateQz_0G11EnvironmentQztFZ":{"name":"mock(state:environment:)","abstract":"<p>Create a &ldquo;mock&rdquo; RedUxable view.</p>","parent_name":"RedUxable"},"Protocols/RedUxable.html#/s:5RedUx0A6UxableP5storeAA5StoreCy10LocalStateQz0F5EventQz0F11EnvironmentQzGvp":{"name":"store","abstract":"<p>The store</p>","parent_name":"RedUxable"},"Protocols/RedUxable.html#/s:5RedUx0A6UxableP9viewModelAA04ViewE0Cy10LocalStateQz0G5EventQzGvp":{"name":"viewModel","abstract":"<p>The view model</p>","parent_name":"RedUxable"},"Protocols/RedUxable.html#/s:5RedUx0A6UxableP5store9viewModelxAA5StoreCy10LocalStateQz0H5EventQz0H11EnvironmentQzG_AA04ViewF0CyAiKGtcfc":{"name":"init(store:viewModel:)","abstract":"<p>Initialize a new RedUxable view.</p>","parent_name":"RedUxable"},"Protocols/Middlewareable.html#/s:5RedUx14MiddlewareableP10InputEventQa":{"name":"InputEvent","abstract":"<p>The input event.</p>","parent_name":"Middlewareable"},"Protocols/Middlewareable.html#/s:5RedUx14MiddlewareableP11OutputEventQa":{"name":"OutputEvent","abstract":"<p>The output event.</p>","parent_name":"Middlewareable"},"Protocols/Middlewareable.html#/s:5RedUx14MiddlewareableP5StateQa":{"name":"State","abstract":"<p>The state.</p>","parent_name":"Middlewareable"},"Protocols/Middlewareable.html#/s:5RedUx14MiddlewareableP12outputStream10Asynchrone20AnyAsyncSequenceableVy11OutputEventQzGvp":{"name":"outputStream","abstract":"<p>The output stream is used my the middleware to emit events","parent_name":"Middlewareable"},"Protocols/Middlewareable.html#/s:5RedUx14MiddlewareableP7execute5event5statey10InputEventQz_5StateQzyXEtYaF":{"name":"execute(event:state:)","abstract":"<p>The execute function is called by the store when it receives an event.</p>","parent_name":"Middlewareable"},"Protocols/Middlewareable.html#/s:5RedUx14MiddlewareablePAAE20eraseToAnyMiddlewareAA0fG0Vy10InputEventQz06OutputI0Qz5StateQzGyF":{"name":"eraseToAnyMiddleware()","abstract":"<p>Type erase a middle.</p>","parent_name":"Middlewareable"},"Protocols/Middlewareable.html#/s:5RedUx14MiddlewareablePAAE4pull10inputEvent06outputF05stateAA13AnyMiddlewareVyqd__qd_0_qd_1_G05InputF0QzSgqd__c_qd_0_06OutputF0Qzc5StateQzqd_1_ctr1_lF":{"name":"pull(inputEvent:outputEvent:state:)","abstract":"<p>Transforms or &ldquo;Pulls&rdquo; a scoped middleware into a global middleware.</p>","parent_name":"Middlewareable"},"Protocols/Middlewareable.html":{"name":"Middlewareable","abstract":"<p>Middleware provides a way to build more complicated application logic that doesn&rsquo;t belong inside"},"Protocols/RedUxable.html":{"name":"RedUxable","abstract":"<p>A protocol to help guide structuring a SwiftUI view to use RedUx.</p>"},"Extensions/View.html#/s:7SwiftUI4ViewP5RedUxE11synchronizeyQrAA7BindingVyqd__G_AA10FocusStateVAFVyqd___GtSHRd__lF":{"name":"synchronize(_:_:)","abstract":"<p>Synchronize a <code>Binding</code> and a <code>FocusState.Binding</code>&lsquo;s value.","parent_name":"View"},"Extensions/View.html":{"name":"View"},"Classes/ViewModel.html#/s:5RedUx9ViewModelCyACyxq_GAA5StoreCyxq_qd__Gclufc":{"name":"init(_:)","abstract":"<p>Create a new view model instance.</p>","parent_name":"ViewModel"},"Classes/ViewModel.html#/s:5RedUx9ViewModelC4sendyyq_F":{"name":"send(_:)","abstract":"<p>Send an event to the store.</p>","parent_name":"ViewModel"},"Classes/ViewModel.html#/s:5RedUx9ViewModelC13dynamicMemberqd__s7KeyPathCyxqd__G_tcluip":{"name":"subscript(dynamicMember:)","abstract":"<p>Returns the resulting state value of a given key path.</p>","parent_name":"ViewModel"},"Classes/ViewModel.html#/s:5RedUx9ViewModelC7binding5value5event7SwiftUI7BindingVyqd__Gqd__xc_q_qd__ctSQRd__lF":{"name":"binding(value:event:)","abstract":"<p>Creates a <code>Binding</code> that prevents direct write access to the","parent_name":"ViewModel"},"Classes/ViewModel.html#/s:5RedUx9ViewModelC7binding5value5event7SwiftUI7BindingVyqd__Gqd__xc_q_tSQRd__lF":{"name":"binding(value:event:)","abstract":"<p>Creates a <code>Binding</code> that prevents direct write access to the","parent_name":"ViewModel"},"Classes/Store.html#/s:5RedUx5StoreC5statexvp":{"name":"state","abstract":"<p>The state of the store.</p>","parent_name":"Store"},"Classes/Store.html#/s:5RedUx5StoreC13stateSequence10Asynchrone20AnyAsyncSequenceableVyxGvp":{"name":"stateSequence","abstract":"<p>A sequence that emits state changes.</p>","parent_name":"Store"},"Classes/Store.html#/s:5RedUx5StoreC5state7reducer11environment11middlewaresACyxq_q0_Gx_AA7ReducerVyxq_q0_Gq0_SayAA13AnyMiddlewareVyq_q_xGGtcfc":{"name":"init(state:reducer:environment:middlewares:)","abstract":"<p>Construct a Store with state, reducer and environment.</p>","parent_name":"Store"},"Classes/Store.html#/s:5RedUx5StoreC4sendyyq_F":{"name":"send(_:)","abstract":"<p>Send an event through the store&rsquo;s reducer.</p>","parent_name":"Store"},"Classes/Store.html#/s:5RedUx5StoreC5scope5state5event11environmentACyqd__qd_0_qd_1_Gqd__xc_q_qd_0_cqd_1_q0_XEtr1_lF":{"name":"scope(state:event:environment:)","abstract":"<p>Create a sub store from the current store.</p>","parent_name":"Store"},"Classes/Store.html":{"name":"Store","abstract":"<p>A Store is the core of the application. It is used to manage state and handle events sent to it.</p>"},"Classes/ViewModel.html":{"name":"ViewModel","abstract":"<p>A view model wraps a store and observes state changes that can be used"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}